    The specific dialect of Pascal supported by the original project is not specified anywhere in the source code. Notwithstanding, a look at the reserved words, special symbols, numbers and other tokens reveals that they correspond very well with the definitions in the Pascal ISO 7185 standard document.
    However, there are certain language features that are not implemented. Looking at the code, at least SET and POINTER types, LABELs and GOTO statement, variant RECORDs and WITH statement are not implemented. I conclude that the author targeted Pascal ISO 7185 minus these features (and possibly anothers I have not seen), so as to keep the project more concise and manageable.

    This tokens are listed in the TokenType enum:

- Tokens

    // Reserved words.
    AND, ARRAY, BEGIN, CASE, CONST, DIV, DO, DOWNTO, ELSE, END,
    FILE, FOR, FUNCTION, GOTO, IF, IN, LABEL, MOD, NIL, NOT,
    OF, OR, PACKED, PROCEDURE, PROGRAM, RECORD, REPEAT, SET,
    THEN, TO, TYPE, UNTIL, VAR, WHILE, WITH,

    // Special symbols.
    PLUS("+"), MINUS("-"), STAR("*"), SLASH("/"), COLON_EQUALS(":="),
    DOT("."), COMMA(","), SEMICOLON(";"), COLON(":"), QUOTE("'"),
    EQUALS("="), NOT_EQUALS("<>"), LESS_THAN("<"), LESS_EQUALS("<="),
    GREATER_EQUALS(">="), GREATER_THAN(">"), LEFT_PAREN("("), RIGHT_PAREN(")"),
    LEFT_BRACKET("["), RIGHT_BRACKET("]"), LEFT_BRACE("{"), RIGHT_BRACE("}"),
    UP_ARROW("^"), DOT_DOT(".."),

    // Other token types
    IDENTIFIER, // the scanner scans for words, if it is not a reserved word, then it is an identifier
    INTEGER, // sequence of integers up to Java's "int" max value, checks for overflow
    REAL, // format iii'[.'ddd']E'eee integer, decimal and exponent parts, also verifies max values
    STRING, // delimited with "'" (single quote character)
    ERROR,
    END_OF_FILE;

- Syntax Rules

    For now, I assume that the syntactic rules of the original project are those of the Pascal ISO 7185 standard, minus the features mentioned above.
